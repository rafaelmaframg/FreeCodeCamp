#!/usr/bin/env python
# coding: utf-8

# In[1]:


def check_time(time):
    if len(time) == 7 or len(time) == 4:
        return '0'+time
    else:
        return time

def change_time(value):
    if value == 'PM':
        return 'AM (next day)'
    else:
        return 'PM'


# In[27]:


def add_time(start, duration):
    pm = start[-2:]
    start = check_time(start)
    duration = check_time(duration)

    dig1 = int(start[0]) + int(duration[0])
    dig2 = int(start[1]) + int(duration[1])
    dig3 = int(start[3]) + int(duration[3])
    dig4 = int(start[4]) + int(duration[4])
   
    if len(str(dig4)) > 1:
        dig4 -= 10
        dig3 += 1
    
    if dig3 >= 6:
        dig2 += 1
        dig3 -= 6
    
    if len(str(dig2)) > 1:
        dig2 = str(dig2)
        dig2 = int(dig2[1]) - 2
        pm = change_time(pm)
        
    if dig2 > 2 and dig1 == 1:
        dig1 = '' 
        dig2 -= 2
        pm = change_time(pm)
        
    if dig1 == 0:
        dig1 = ''

    if dig1 == 1 and dig2 == 2:
        pm = change_time(pm)
    
    if dig1 == 2 and dig2 >=4:
        dig1 = ''
        dig2 = dig2 - 4
        pm = f'{pm} (next day)'
        
    new_time = f'{dig1}{dig2}:{dig3}{dig4} {pm}'
    
    
    return new_time


# In[28]:


add_time("3:30 PM", "2:12")
        #expected = "5:42 PM"


# In[29]:


add_time("11:55 AM", "3:12")
        #expected = "3:07 PM"


# In[30]:


add_time("9:15 PM", "5:30")
        #expected = "2:45 AM (next day)"


# In[31]:


add_time("11:40 AM", "0:25")
        #expected = "12:05 PM"


# In[32]:


add_time("2:59 AM", "24:00")
        #expected = "2:59 AM (next day)"


# In[33]:


add_time("11:59 PM", "24:05")
        #expected = "12:04 AM (2 days later)"


# In[ ]:


